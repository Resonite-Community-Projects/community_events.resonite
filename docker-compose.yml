services:
  database:
    image: postgres:16
    profiles:
      - database
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=changeme
      - POSTGRES_USER=resonitecommunities
      - POSTGRES_DB=resonitecommunities
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U resonitecommunities"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
  signals_manager:
    build: backend
    restart: always
    command: poetry run signals_manager
    profiles:
      - manager
    depends_on:
      - "database"
    volumes:
      - "./backend/config.toml:/app/config.toml"
  api_client:
    build: backend
    restart: always
    profiles:
      - client
    command: poetry run api_client
    depends_on:
      - "database"
    volumes:
      - "./backend/config.toml:/app/config.toml"
    ports:
      - '8000:8000'
  web_client:
    build: backend
    restart: always
    profiles:
      - client
    command: poetry run web_client
    depends_on:
      - "database"
    volumes:
      - "./backend/config.toml:/app/config.toml"
    ports:
      - '8001:8001'

volumes:
  postgres_data:
    driver: local